import(methods)
importFrom(stats, setNames)
importFrom(Matrix, sparseMatrix)
import(BiocGenerics)
import(S4Vectors)
import(IRanges)
import(graph)  # for generic functions numNodes(), numEdges(), nodes(),
               # degree(), adjacencyMatrix(), etc... (but ideally these
               # should be defined in BiocGenerics or maybe in a GraphGenerics
               # package)


### - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
### Export S4 classes
###

exportClasses(
    ## AnnotatedIDs-class.R:
    AnnotatedIDs,

    ## DGraph-class.R:
    DGraph, DGraphNodes,

    ## UGraph-class.R:
    UGraph
)


### - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
### Export S3 methods
###

S3method(summary, DGraph)

### We also export them thru the export() directive so that (a) they can be
### called directly, (b) tab-completion on the name of the generic shows them,
### and (c) methods() doesn't asterisk them.

export(
    summary.DGraph
)


### - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
### Export S4 methods for generics not defined in this package
###

exportMethods(
    ## Methods for generics defined in the base package:
    names, "names<-",
    as.vector,
    summary,
    xtfrm,

    ## Methods for generics defined in the methods package:
    show, coerce,

    ## Methods for generics defined in the BiocGenerics package:
    match, t,

    ## Methods for generics defined in the S4Vectors package:
    vertical_slot_names, showAsCell, pcompare, selfmatch,
    from, to, nLnode, nRnode, nnode, countLnodeHits, countRnodeHits,

    ## Methods for generics defined in the graph package:
    numNodes, numEdges, nodes, "nodes<-", degree,
    isDirected, edgemode, "edgemode<-", edgeMatrix,
    adjacencyMatrix, connComp, isConnected
)


### - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
### Export non-generic functions
###

export(
    ## AnnotatedIDs-class.R:
    AnnotatedIDs,

    ## DGraph-class.R:
    DGraph, DGraphNodes,

    ## UGraph-class.R:
    UGraph,

    ## makeDGraphFromGO.R:
    makeDGraphFromGO
)


### - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
### Export S4 generics defined in DelayedArray + export corresponding methods
###

export(
    ## AnnotatedIDs-class.R:
    ID,

    ## DGraph-class.R:
    fromNode, toNode,
    outDegree, inDegree
)

### Exactly the same list as above.
exportMethods(
    ID,
    fromNode, toNode,
    outDegree, inDegree
)

